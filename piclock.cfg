#Window width/height (for debugging), by default (or if these are 0) the clock will be fullscreen
#init_window_width=1366
#init_window_height=768
#Tally mode, 0=disabled, 1=GPIO, 2=TCP/IP connection, 3=TCP/IP connection with GPIs fed back over connection, 5=Local GPIO with triggered commands
tally_mode=2
#GPIO mode, 0=PiFace Digital Style, 1=Native Raspberry Pi GPI/O
gpio_mode=1
#String indicating what state pull up/down resistors should be in for Native GPI hardware, one letter per GPI
# U - Pull Up (3.3V)
# D - Pull Down (0V)
# O - Off
# This setting only has any affect if tally_mode is 1 or 3
# If not specified it will default to pulling all the inputs up (expecting any input to short them to ground)
gpio_pulls=UUDDOOUU
#tally_remote_host specify host(s) to connect to
tally_remote_host=piclock-srv-1
tally_remote_host=piclock-srv-2
#Port to connect to on tally hosts (default 6254)
tally_remote_port=6254
#Shared secret (password) for access to TCP/IP system
tally_shared_secret=SharedSecretGoesHere
#Set of (TCP-protocol) commands to be processed at startup to configure a standalone screen
initial_command_file=/etc/piclock_initial_commands.txt

#Set of (TCP protocol) commands to be run on GPI state change (and startup state) when tally_mode is set to 5
gpi_0_off=SETTALLY:0:0:666666:000000:GPI 0 Off
gpi_0_on=SETTALLY:0:0:FFFFFF:FF0000:GPI 0 ON
gpi_1_off=SETTALLY:1:0:666666:000000:GPI 1 Off
gpi_1_on=SETTALLY:1:0:FFFFFF:FF0000:GPI 1 ON
